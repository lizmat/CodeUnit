=begin pod

=head1 NAME

CodeUnit - provide a unit for execution of code

=head1 SYNOPSIS

=begin code :lang<raku>

use CodeUnit;

my $cu = CodeUnit.new;
$cu.eval('my $a = 42');
$cu.eval('say $a');  # 42

=end code

=head1 DESCRIPTION

The C<CodeUnit> distribution provides an interface to a compiler
context that allows code to be evaluated by given strings, while
maintaining context between states.

As such it provides one of the underlying functionalities of a REPL
(Read Evaluate Print Loop), but could be used by itself for a
multitude of uses.

=head1 METHODS

=head2 new

=begin code :lang<raku>

my $cu1 = CodeUnit.new;

my $context = context;
my $cu1 = CodeUnit.new(:$context);

=end code

The C<new> method instantiates a C<CodeUnit> object.  It takes an
options C<:context> named argument, which should be specified with
a value returned by the C<context> subroutine.

=head2 eval

=begin code :lang<raku>

$cu.eval('my $a = 42');
$cu.eval('say $a');  # 42

=end code

The C<eval> method evaluates the given string with Raku code within
the context of the code unit, and returns the result of the evaluation.

=head2 reset

=begin code :lang<raku>

$cu.reset;

=end code

The C<reset> method resets the context of the code unit to its initial
state as (implicitely) specified with C<.new>.

=head2 compiler-version

=begin code :lang<raku>

say $cu.compiler-version;
# Welcome to Rakudo™ v2025.01.
# Implementing the Raku® Programming Language v6.d.
# Built on MoarVM version 2025.01.

=end code

The C<compiler-version> method returns the compiler version information,
which is typically shown when starting a REPL.

=head2 context-completions

=begin code :lang<raku>

.say for $cu.context-completions;

=end code

The C<context-completions> method returns an unsorted list of context
completion candidates found in the context of the code unit, which are
typically used to provide completions in a REPL (hence the name).

=head1 SUBROUTINES

=head2 context

=begin code :lang<raku>

my $context = context;
my $cu = CodeUnit.new(:$context);

=end code

The C<context> subroutine returns a context object that can be used to
initialize the context of a code unit with.

=head1 AUTHOR

Elizabeth Mattijsen <liz@raku.rocks>

Source can be located at: https://github.com/lizmat/CodeUnit . Comments
and Pull Requests are welcome.

If you like this module, or what I'm doing more generally, committing to a
L<small sponsorship|https://github.com/sponsors/lizmat/>  would mean a great
deal to me!

=head1 COPYRIGHT AND LICENSE

Copyright 2025 Elizabeth Mattijsen

This library is free software; you can redistribute it and/or modify it under the Artistic License 2.0.

=end pod

# vim: expandtab shiftwidth=4
